#include <iostream>
#include <fstream>
#include <string>
#include <sstream>


using namespace std;

//struct for a posting
struct posting{
	string type;
	bool forSale;
	float price;
};




int main()
{
	//array of postings 
	posting fullList[100];

	//get file name
	string fileName;
	cout << "What is the name of the file? " << endl;
	//cin >> fileName;
	fileName = "garageSale.txt";
	cout << endl;



//Open file 
	ifstream inFile;
	inFile.open(fileName);

	string line;
	int position = 0;

	if (!inFile.is_open())
	{
		cout << "File Error!!" << endl;
		return 1;
	}

//Read and store postings in array

		while(getline(inFile, line))
		{
			string tempString;
			string Sale;

			//assigning to variables

			stringstream ss(line);
			//type
			getline(ss, fullList[position].type, ',');

			//forSale
			getline(ss, Sale, ',');
			if(Sale == "for sale")
				fullList[position].forSale = true;
			else if (Sale == "wanted")
				fullList[position].forSale = false;

			//price
			getline(ss, tempString, ',');
			fullList[position].price = stoi(tempString);

			position++;

		}

	int count = 0;

	//Print each posting
	for (int i = 0; i < 100; i++)
	{
		cout << fullList[i].type << ' ' << fullList[i].price << endl;
		count++;
	}

	cout <<  "count is: " << count << endl;
	cout << endl;



// if There is a match (wanted + for sale)
	int match = 0;
	int deleted = 0;
	for(int i = 0; i < 100; i++)
	{
		int i2 = i+1;
	
		if(fullList[i].type == fullList[i2].type && fullList[i].price == fullList[i2].price)
		{
			if (fullList[i].forSale != fullList[i2].forSale)
			{
				//fullList[i].type = "sold";
				match++;
				//overwriting to remove posting
				for (int j = i2; j < 100; j++)
				{
					fullList[j]  = fullList[j + 1];
					fullList[i+1] = fullList[i];
						
				}
			}
		}
	}



// Print out postings

	cout << "Number of posts matched: " << match << endl << endl;
	cout << "Number of posts deleted: " << deleted << endl << endl;

	int count2 = 0;
	for (int i = 0; i < 100; i++)
		{
			cout << fullList[i].type << ' ' << fullList[i].price << endl;
			count2++;
			
		}

	cout << "count2 is: "  << count2 << endl;
}
